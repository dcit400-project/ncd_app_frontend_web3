Update these:  // Hypertension voice questions
	private hypertensionQuestions = [
	  { key: 'Sex', question: 'Are you male or female?' },
	  { key: 'PhysicalHealthDays', question: 'How many days in the past month did you feel physically unwell?' },
	  { key: 'LastCheckupTime', question: 'When was your last routine medical checkup?' },
	  { key: 'BPMeds', question: 'Are you currently taking blood pressure medication?' },
	  { key: 'SmokerStatus', question: 'Do you currently smoke cigarettes?' }
	];

	// Arthritis voice questions
	private arthritisQuestions = [
	  { key: 'Sex', question: 'Are you male or female?' },
	  { key: 'DifficultyWalking', question: 'Do you have serious difficulty walking or climbing stairs?' },
	  { key: 'DifficultyDressingBathing', question: 'Do you have difficulty dressing or bathing?' },
	  { key: 'DifficultyErrands', question: 'Do you have difficulty doing errands alone such as visiting a doctor or shopping?' }
	];

	// Lung Cancer voice questions
	private lungCancerQuestions = [
	  { key: 'AgeCategory', question: 'What is your age category?' },
	  { key: 'SmokerStatus', question: 'Do you currently smoke cigarettes?' },
	  { key: 'ECigaretteUsage', question: 'Do you use e-cigarettes or vaping devices?' },
	  { key: 'ChestScan', question: 'Have you had a chest scan (X-ray or CT scan) in the past year?' }
	];

	// Asthma, Diabetes, etc...

	questions: { key: string; question: string }[] = []; // start empty

	private getQuestionsForDisease(id: number) {
	  switch (id) {
		case 0: return this.hypertensionQuestions;
		case 1: return this.arthritisQuestions;
		case 2: return this.lungCancerQuestions;
		// case 3: return this.asthmaQuestions;
		// case 4: return this.diabetesQuestions;
		default: return [];
	  }
	}
	
	        Using the questions in these (look at the 'fields' part, forget the title part): 
			
			
			
			
			
			
			
			
			
			
			 private hypertensionFields: { title: string; fields: Field[]; }[] = [
    {
      title: 'Demographics',
      fields: [
        { key: 'age', label: 'Age', type: 'number' },
        { key: 'sex', label: 'Sex', type: 'select', options: ['Female', 'Male'], map: { Female: 1, Male: 0 } }
      ]
    },
    {
      title: 'Lifestyle',
      fields: [
        { key: 'is_smoking', label: 'Do you currently smoke?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'cigsPerDay', label: 'Cigarettes Per Day', type: 'number' }
      ]
    },
    {
      title: 'Medical History',
      fields: [
        { key: 'BPMeds', label: 'Currently on Blood Pressure Meds?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'prevalentStroke', label: 'History of Stroke?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'prevalentHyp', label: 'Previously Diagnosed Hypertension?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'diabetes', label: 'Diagnosed with Diabetes?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } }
      ]
    },
    {
      title: 'Clinical Measurements',
      fields: [
        { key: 'totChol', label: 'Total Cholesterol (mg/dL)', type: 'number' },
        { key: 'sysBP', label: 'Systolic Blood Pressure (mm Hg)', type: 'number' },
        { key: 'diaBP', label: 'Diastolic Blood Pressure (mm Hg)', type: 'number' },
        { key: 'BMI', label: 'Body Mass Index (BMI)', type: 'number' },
        { key: 'heartRate', label: 'Heart Rate (bpm)', type: 'number' },
        { key: 'glucose', label: 'Fasting Glucose Level (mg/dL)', type: 'number' }
      ]
    }
  ];
  
  
  
  
  private arthritisFields: { title: string; fields: Field[] }[] = [
    {
      title: 'Demographics',
      fields: [
        {
          key: 'Sex',
          label: 'Sex',
          type: 'select',
          options: ['Male', 'Female'],
          map: { Male: 1, Female: 0 }
        },
        {
          key: 'Age_Category',
          label: 'Age category',
          type: 'select',
          options: [
            '18-24', '25-29', '30-34', '35-39', '40-44', '45-49',
            '50-54', '55-59', '60-64', '65-69', '70-74', '75-79', '80 or older'
          ],
          map: {
            '18-24': 0, '25-29': 1, '30-34': 2, '35-39': 3, '40-44': 4,
            '45-49': 5, '50-54': 6, '55-59': 7, '60-64': 8,
            '65-69': 9, '70-74': 10, '75-79': 11, '80 or older': 12
          }
        }
      ]
    },
    {
      title: 'Lifestyle',
      fields: [
        {
          key: 'Checkup',
          label: 'Do you go for health checkups?',
          type: 'select',
          options: ['Yes', 'No'],
          map: { Yes: 1, No: 0 }
        },
        {
          key: 'Exercise',
          label: 'Do you exercise regularly?',
          type: 'select',
          options: ['Yes', 'No'],
          map: { Yes: 1, No: 0 }
        },
        {
          key: 'Smoking_History',
          label: 'Smoking history',
          type: 'select',
          options: ['Never', 'Former', 'Current'],
          map: { 'Never': 0, 'Former': 1, 'Current': 2 }
        },
        {
          key: 'Alcohol_Consumption',
          label: 'Alcohol consumption (per week)',
          type: 'number'
        }
      ]
    },
    {
      title: 'Body Measurements',
      fields: [
        { key: 'Height_cm', label: 'Height (cm)', type: 'number' },
        { key: 'Weight_kg', label: 'Weight (kg)', type: 'number' },
        { key: 'BMI', label: 'Body Mass Index', type: 'number' }
      ]
    },
    {
      title: 'Dietary Habits',
      fields: [
        { key: 'Fruit_Consumption', label: 'Fruit consumption (per week)', type: 'number' },
        { key: 'Green_Vegetables_Consumption', label: 'Green vegetable consumption (per week)', type: 'number' },
        { key: 'FriedPotato_Consumption', label: 'Fried potato consumption (per week)', type: 'number' }
      ]
    },
    {
      title: 'Medical History',
      fields: [
        {
          key: 'Diabetes',
          label: 'Diagnosed with diabetes?',
          type: 'select',
          options: ['Yes', 'No'],
          map: { Yes: 1, No: 0 }
        },
        {
          key: 'Skin_Cancer',
          label: 'Diagnosed with skin cancer?',
          type: 'select',
          options: ['Yes', 'No'],
          map: { Yes: 1, No: 0 }
        },
        {
          key: 'Other_Cancer',
          label: 'Diagnosed with any other cancer?',
          type: 'select',
          options: ['Yes', 'No'],
          map: { Yes: 1, No: 0 }
        }
      ]
    }
  ];
  
  
  
  
  private lungCancerFields: { title: string; fields: Field[] }[] = [
    {
      title: 'Demographics',
      fields: [
        { key: 'Age', label: 'Age', type: 'number' },
        { key: 'Gender', label: 'Gender', type: 'select', options: ['Male', 'Female'], map: { Male: 1, Female: 0 } }
      ]
    },
    {
      title: 'Lifestyle',
      fields: [
        { key: 'Air_Pollution', label: 'Exposed to air pollution?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'Alcohol_use', label: 'Alcohol use?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'Dust_Allergy', label: 'Dust allergy?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'OccuPational_Hazards', label: 'Occupational hazards?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'Genetic_Risk', label: 'Genetic risk?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'Balanced_Diet', label: 'Follows a balanced diet?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'Obesity', label: 'Obesity present?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'Smoking', label: 'Smoker?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'Passive_Smoker', label: 'Passive smoker?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } }
      ]
    },
    {
      title: 'Medical History',
      fields: [
        { key: 'chronic_Lung_Disease', label: 'Chronic lung disease?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } }
      ]
    },
    {
      title: 'Symptoms',
      fields: [
        { key: 'Chest_Pain', label: 'Chest pain?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'Coughing_of_Blood', label: 'Coughing blood?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'Fatigue', label: 'Fatigue?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'Weight_Loss', label: 'Unexplained weight loss?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'Shortness_of_Breath', label: 'Shortness of breath?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'Wheezing', label: 'Wheezing?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'Swallowing_Difficulty', label: 'Swallowing difficulty?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'Clubbing_of_Finger_Nails', label: 'Clubbing of nails?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'Frequent_Cold', label: 'Frequent colds?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'Dry_Cough', label: 'Dry cough?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'Snoring', label: 'Snoring?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } }
      ]
    }
  ];
  
  
  private asthmaFields: { title: string; fields: Field[] }[] = [
    {
      title: 'Demographics',
      fields: [
        { key: 'Sex', label: 'Sex', type: 'select', options: ['Male', 'Female'], map: { Male: 1, Female: 0 } },
        {
          key: 'RaceEthnicityCategory',
          label: 'Race/ethnicity category',
          type: 'select',
          options: [
            'Multiracial, Non-Hispanic',
            'Other race only, Non-Hispanic',
            'Black only, Non-Hispanic',
            'Hispanic',
            'White only, Non-Hispanic'
          ],
          map: {
            'Multiracial, Non-Hispanic': 0,
            'Other race only, Non-Hispanic': 1,
            'Black only, Non-Hispanic': 2,
            'Hispanic': 3,
            'White only, Non-Hispanic': 4
          }
        },
        {
          key: 'AgeCategory',
          label: 'Age category',
          type: 'select',
          options: [
            'Age 18 to 24', 'Age 25 to 29', 'Age 30 to 34', 'Age 35 to 39',
            'Age 40 to 44', 'Age 45 to 49', 'Age 50 to 54', 'Age 55 to 59',
            'Age 60 to 64', 'Age 65 to 69', 'Age 70 to 74', 'Age 75 to 79', 'Age 80 or older'
          ],
          map: {
            'Age 18 to 24': 0, 'Age 25 to 29': 1, 'Age 30 to 34': 2, 'Age 35 to 39': 3,
            'Age 40 to 44': 4, 'Age 45 to 49': 5, 'Age 50 to 54': 6, 'Age 55 to 59': 7,
            'Age 60 to 64': 8, 'Age 65 to 69': 9, 'Age 70 to 74': 10, 'Age 75 to 79': 11, 'Age 80 or older': 12
          }
        }
      ]
    },
    {
      title: 'General Health',
      fields: [
        { key: 'PhysicalHealthDays', label: 'Physical health days (last 30)', type: 'number' },
        { key: 'MentalHealthDays', label: 'Mental health days (last 30)', type: 'number' },
        {
          key: 'LastCheckupTime',
          label: 'Months since last check‑up',
          type: 'select',
          options: [
            '5 or more years ago',
            'Within past 5 years (2 years but less than 5 years ago)',
            'Within past 2 years (1 year but less than 2 years ago)',
            'Within past year (anytime less than 12 months ago)'
          ],
          map: {
            '5 or more years ago': 0,
            'Within past 5 years (2 years but less than 5 years ago)': 1,
            'Within past 2 years (1 year but less than 2 years ago)': 2,
            'Within past year (anytime less than 12 months ago)': 3
          }
        },
        { key: 'SleepHours', label: 'Average sleep hours', type: 'number' },
        { key: 'RemovedTeeth', label: 'Teeth removed due to decay', type: 'select', options: ['All', '6 or more, but not all', '1 to 5', 'None of them'], map: { 'All': 3, '6 or more, but not all': 2, '1 to 5': 1, 'None of them': 0 } }
      ]
    },
    {
      title: 'Disability & Limitations',
      fields: [
        { key: 'DeafOrHardOfHearing', label: 'Deaf / hard of hearing', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'BlindOrVisionDifficulty', label: 'Blind or vision difficulty', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'DifficultyConcentrating', label: 'Difficulty concentrating or remembering', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'DifficultyWalking', label: 'Difficulty walking or climbing stairs', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'DifficultyDressingBathing', label: 'Difficulty dressing or bathing', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'DifficultyErrands', label: 'Difficulty doing errands alone', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } }
      ]
    },
    {
      title: 'Lifestyle',
      fields: [
        { key: 'PhysicalActivities', label: 'Weekly physical activity (mins)', type: 'number' },
        {
          key: 'SmokerStatus',
          label: 'Current smoker?',
          type: 'select',
          options: [
            'Never smoked',
            'Former smoker',
            'Current smoker - now smokes some days',
            'Current smoker - now smokes every day'
          ],
          map: {
            'Never smoked': 0,
            'Former smoker': 1,
            'Current smoker - now smokes some days': 2,
            'Current smoker - now smokes every day': 3
          }
        },
        {
          key: 'ECigaretteUsage',
          label: 'E-cigarette usage',
          type: 'select',
          options: [
            'Never used e-cigarettes in my entire life',
            'Not at all (right now)',
            'Use them some days',
            'Use them every day'
          ],
          map: {
            'Never used e-cigarettes in my entire life': 0,
            'Not at all (right now)': 1,
            'Use them some days': 2,
            'Use them every day': 3
          }
        },
        { key: 'AlcoholDrinkers', label: 'Currently drinks alcohol?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } }
      ]
    },
    {
      title: 'Medical History',
      fields: [
        { key: 'HadAngina', label: 'Ever had angina?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'HadStroke', label: 'Ever had a stroke?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'HadHeartAttack', label: 'Do you have heart attacks?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'HadCOPD', label: 'Diagnosed with COPD?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'HadDepressiveDisorder', label: 'Diagnosed with depressive disorder?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'HadArthritis', label: 'Diagnosed with arthritis?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'HadKidneyDisease', label: 'Do you have a Kidney Disease?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'HadSkinCancer', label: 'Do you have Skin Cancer?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'HadDiabetes', label: 'Diagnosed with diabetes?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } }
      ]
    },
    {
      title: 'Vaccination & Screening',
      fields: [
        { key: 'ChestScan', label: 'Ever had a chest scan?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'HIVTesting', label: 'Ever tested for HIV?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'FluVaxLast12', label: 'Flu vaccine in last 12 months?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        { key: 'PneumoVaxEver', label: 'Ever received pneumococcal vaccine?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } },
        {
          key: 'TetanusLast10Tdap',
          label: 'Tetanus (Td/Tdap) shot in last 10 years?',
          type: 'select',
          options: [
            'No, did not receive any tetanus shot in the past 10 years',
            'Yes, received tetanus shot, but not Tdap',
            'Yes, received tetanus shot but not sure what type',
            'Yes, received Tdap'
          ],
          map: {
            'No, did not receive any tetanus shot in the past 10 years': 0,
            'Yes, received tetanus shot, but not Tdap': 1,
            'Yes, received tetanus shot but not sure what type': 2,
            'Yes, received Tdap': 3
          }
        },
        { key: 'HighRiskLastYear', label: 'In high-risk group last year?', type: 'select', options: ['Yes', 'No'], map: { Yes: 1, No: 0 } }
      ]
    },
    {
      title: 'COVID-19',
      fields: [
        {
          key: 'CovidPos',
          label: 'Ever tested positive for COVID-19?',
          type: 'select',
          options: [
            'No',
            'Tested positive using home test without a health professional',
            'Yes'
          ],
          map: {
            'No': 0,
            'Tested positive using home test without a health professional': 1,
            'Yes': 2
          }
        }
      ]
    },
    {
      title: 'Vitals',
      fields: [
        { key: 'HeightInMeters', label: 'Height (m)', type: 'number' },
        { key: 'WeightInKilograms', label: 'Weight (kg)', type: 'number' },
        { key: 'BMI', label: 'Body Mass Index (BMI)', type: 'number' }
      ]
    }
  ];
  

  private diabetesFields: { title: string; fields: Field[] }[] = [
    {
      title: 'Demographics',
      fields: [
        { key: 'gender', label: 'Gender', type: 'select', options: ['Male', 'Female'], map: { 'Male': 1, 'Female': 0 } },
        { key: 'age', label: 'Age', type: 'number' }
      ]
    },
    {
      title: 'Medical History',
      fields: [
        { key: 'hypertension', label: 'Has hypertension?', type: 'select', options: ['Yes', 'No'], map: { 'Yes': 1, 'No': 0 } },
        { key: 'heart_disease', label: 'Heart disease history?', type: 'select', options: ['Yes', 'No'], map: { 'Yes': 1, 'No': 0 } },
        { key: 'diabetes', label: 'Diagnosed diabetes?', type: 'select', options: ['Yes', 'No'], map: { 'Yes': 1, 'No': 0 } },
        { key: 'ChestScan', label: 'Chest scan in past year?', type: 'select', options: ['Yes', 'No'], map: { 'Yes': 1, 'No': 0 } }
      ]
    },
    {
      title: 'Lifestyle',
      fields: [
        { key: 'smoking_history', label: 'Smoking history', type: 'select', options: ['Never', 'Former', 'Current'], map: {
          'Never': 0, 'Former': 1, 'Current': 2
        }},
        { key: 'SmokerStatus', label: 'Current smoker?', type: 'select', options: ['Never', 'Former', 'Some days', 'Every day'], map: {
          'Never': 0, 'Former': 1, 'Some days': 2, 'Every day': 3
        }}
      ]
    },
    {
      title: 'Clinical Measurements',
      fields: [
        { key: 'bmi', label: 'Body Mass Index (BMI)', type: 'number' },
        { key: 'HbA1c_level', label: 'HbA1c (%)', type: 'number' },
        { key: 'blood_glucose_level', label: 'Blood glucose (mg/dL)', type: 'number' }
      ]
    }
  ];























Okay. Now this is my API python scirpt for processing the voice. Gimme the rest for of the processing for  the question keys in each disease.     SAMPLE: #----------------------------Mapping----------------------------------
    # Mapping for if using the voice form---one-by-one
    # *Mapping for if using the fill-in form-is done in the Angular

    if question_key in numeric_fields:
        value = extract_number(spoken_text)

    elif question_key in yes_no_fields:
        value = extract_boolean(spoken_text)
        

    elif question_key == "Sex":
        value = extract_gender(spoken_text)
        

    elif question_key == "LastCheckupTime":
        label = classify(spoken_text, list(lastCheckupTimeMap.keys()))
        value = lastCheckupTimeMap.get(label)

    elif question_key == "RemovedTeeth":
        label = classify(spoken_text, list(removedTeethMap.keys()))
        value = removedTeethMap.get(label)

    elif question_key == "SmokerStatus":
        label = classify(spoken_text, list(smokerStatusMap.keys()))
        value = smokerStatusMap.get(label)

    elif question_key == "ECigaretteUsage":
        label = classify(spoken_text, list(eCigaretteUsageMap.keys()))
        value = eCigaretteUsageMap.get(label)

    elif question_key == "RaceEthnicityCategory":
        label = classify(spoken_text, list(raceEthnicityMap.keys()))
        value = raceEthnicityMap.get(label)

    elif question_key == "AgeCategory":
        label = classify(spoken_text, list(ageCategoryMap.keys()))
        value = ageCategoryMap.get(label)

    elif question_key == "TetanusLast10Tdap":
        label = classify(spoken_text, list(tetanusMap.keys()))
        value = tetanusMap.get(label)

    elif question_key == "CovidPos":
        label = classify(spoken_text, list(covidPosMap.keys()))
        value = covidPosMap.get(label)

    return {"extractedValue": value}
#----------------------------Mapping-----------------------------------




const loading = await this.loadingCtrl.create({
		message: 'Processing...',
		spinner: 'circles', // 'bubbles', 'dots', etc. also available
		duration: 0 // 0 = manual dismiss
	  }); 
	  await loading.present();







loading.dismiss(); //stop loading





sdee, this is for my android voice inputuing...the mic.  i want for web.
/* START / STOP VOICE FORM*/
  currentQuestionIndex = 0;  statusMessage = '';
  responseMessage = '';
  startVoiceForm() {
    /**/this.initFormData(); this.choiceStarted=false;   this.voiceUIActive = true; this.currentQuestionIndex = 0;
    this.zone.run(() => { this.statusMessage = '🤖 Getting ready…'; this.micState = 'idle'; });
    this.askNextQuestion();
  }
  get isVoiceFormComplete(): boolean { return this.currentQuestionIndex >= this.questions.length; }
  //get isVoiceFormComplete(): boolean { return false; }
  get isWaitingToResume(): boolean { return this.voiceUIActive && !this.isVoiceFormComplete && !this.isListening; }
  resumeVoiceForm() {
    this.zone.run(() => { this.statusMessage = '▶️ Resuming…'; this.micState = 'idle'; });
    setTimeout(() => this.askNextQuestion(), 600);
  }
  async initSpeechRecognition() {
    try {
      const available = await SpeechRecognition.available();      /* 1️⃣  Check availability */
      if (!available.available) {
        console.warn('❌ Speech recognition not available');      //this.showToast2('Speech recognition not available.', 'warning');
        return;
      }
      const permStatus = await SpeechRecognition.checkPermissions();     /* 2️⃣  Check existing permission */
      if (!permStatus.speechRecognition ) {
        const reqStatus = await SpeechRecognition.requestPermissions();
        if (!reqStatus.speechRecognition ) {
          console.warn('❌ Microphone permission not granted'); 
		  //this.showToast2('❌ Microphone permission not granted', 'warning');
          return;
        }
      }
    } catch (error) {
      console.error('❌ Failed to initialize native speech recognition:', error);
     // this.showToast2(String(error));
    }
  }







async askNextQuestion() {
    if (!this.voiceUIActive) return;
    if (this.currentQuestionIndex >= this.questions.length) return;
    const q = this.questions[this.currentQuestionIndex].question;
    this.zone.run(() => { this.statusMessage = 'Asking: ' + q; this.micState = 'idle'; });
    try {
      await TextToSpeech.speak({ text: q, lang: 'en-US', rate: 1.0,});      // Use native TTS
      this.zone.run(() => { this.statusMessage = '🎤 Listening… please speak now'; });      //  After speaking, delay slightly and start listening 
      setTimeout(() => { this.startListening(); }, 500); // slight delay to let audio settle
    } catch (err) { console.error('TTS error:', err); }
  }
  async startListening() {
    if (!this.voiceUIActive) return;
    // this.currentQuestionIndex = this.questions.length;  this.submitVoiceResult()                            //skipToVoice 1/2   
	
    try { 
		this.zone.run(() => { this.statusMessage = '🎤 Listening…'; this.micState = 'listening'; this.isListening = true; });
      const result = await SpeechRecognition.start({ language: 'en-US', popup: false, maxResults: 1, partialResults: false, });
      const transcript = result.matches?.[0] || ''; console.log('Recognized speech:', transcript);
      this.showToast2( String(transcript), 'warning');
      this.zone.run(() => { this.processSpeechAnswer(transcript); });  
    } catch (err) {
      console.error('Error starting speech recognition:', err);
      this.showToast2(err instanceof Error ? err.message : String(err), 'danger');
      this.zone.run(() => {
        this.statusMessage = 'I didn’t catch that. Asking again…';
        this.micState = 'idle';
        this.isListening = false;
      });
      setTimeout(() => this.askNextQuestion(), 700);
    }/**/
  }




















